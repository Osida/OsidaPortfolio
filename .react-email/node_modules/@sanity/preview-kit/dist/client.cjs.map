{"version":3,"file":"client.cjs","sources":["../src/client/request.ts","../src/client/createClient.ts","../src/client/mapToEditLinks.ts"],"sourcesContent":["/**\n * Creates a custom `httpRequest` handler for `SanityClient`, that\n * includes a middleware that handles source maps and stega encoding.\n */\nimport {\n  type HttpRequest,\n  requester as originalRequester,\n  type RequestOptions,\n} from '@sanity/client'\nimport isPlainObject from 'lodash.isplainobject'\n\nimport { createTranscoder } from '../csm/transcode'\nimport type {\n  ContentSourceMapQueryResponse,\n  PreviewKitClientConfig,\n} from './types'\n\ntype TranscodeResponseConfig = Pick<\n  PreviewKitClientConfig,\n  'studioUrl' | 'encodeSourceMapAtPath' | 'logger'\n>\n\nfunction transcodeResponse({\n  studioUrl,\n  encodeSourceMapAtPath,\n  logger,\n}: TranscodeResponseConfig) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const transcoder = createTranscoder({\n    studioUrl: studioUrl!,\n    encodeSourceMapAtPath,\n    logger: logger!,\n  })\n  return {\n    onResponse: (response: unknown) => {\n      if (!isBodyResponse(response)) {\n        return response\n      }\n\n      if (\n        Array.isArray(response.body) ||\n        typeof response.body === 'string' ||\n        isPlainObject(response.body)\n      ) {\n        if (!isContentSourceMapBody(response.body)) {\n          if (logger && isResultBody(response.body)) {\n            logger?.error?.(\n              '[@sanity/preview-kit]: Missing Content Source Map from response body',\n              response.body,\n            )\n          }\n          return response\n        }\n\n        const transcoderResult = transcoder(\n          response.body.result,\n          response.body.resultSourceMap!,\n        )\n\n        if (logger) {\n          const isSkipping = transcoderResult.report.skipped.length\n          const isEncoding = transcoderResult.report.encoded.length\n          if (isSkipping || isEncoding) {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;(logger?.groupCollapsed || logger.log)?.(\n              '[@sanity/preview-kit]: Stega encoding source map into result',\n            )\n            logger.log?.(\n              `[@sanity/preview-kit]: Paths encoded: ${transcoderResult.report.encoded.length}, skipped: ${transcoderResult.report.skipped.length}`,\n            )\n          }\n          if (transcoderResult.report.encoded.length > 0) {\n            logger?.log?.(`[@sanity/preview-kit]: Table of encoded paths`)\n            ;(logger?.table || logger.log)?.(transcoderResult.report.encoded)\n          }\n          if (transcoderResult.report.skipped.length > 0) {\n            const skipped = new Set<string>()\n            for (const { path } of transcoderResult.report.skipped) {\n              skipped.add(path.replace(/\\[\\d+\\]/g, '[]'))\n            }\n            logger?.log?.(`[@sanity/preview-kit]: List of skipped paths`, [\n              ...skipped.values(),\n            ])\n          }\n\n          if (isSkipping || isEncoding) {\n            logger?.groupEnd?.()\n          }\n        }\n\n        const body = {\n          ...response.body,\n          result: transcoderResult.result,\n        }\n        return { ...response, body }\n      }\n\n      return response\n    },\n  }\n}\n\n/** @internal */\nexport function createHttpRequest({\n  studioUrl,\n  encodeSourceMapAtPath,\n  logger,\n}: Pick<\n  PreviewKitClientConfig,\n  'studioUrl' | 'encodeSourceMapAtPath' | 'logger'\n>): HttpRequest {\n  const superRequester = originalRequester.clone()\n\n  // Apply the transcoder middleware\n  superRequester.use(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- support the improved get-it typings\n    transcodeResponse({ studioUrl, encodeSourceMapAtPath, logger }) as any,\n  )\n\n  function httpRequest(\n    options: RequestOptions,\n    requester = superRequester,\n  ): HttpRequest {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return requester({ maxRedirects: 0, ...options } as any)\n  }\n\n  httpRequest.defaultRequester = superRequester\n\n  return httpRequest\n}\n\nfunction isBodyResponse(response: unknown): response is { body?: unknown } {\n  return typeof response === 'object' && response !== null\n}\n\n/** @alpha */\nexport function isResultBody(\n  body: unknown,\n): body is ContentSourceMapQueryResponse {\n  return typeof body === 'object' && body !== null && 'result' in body\n}\n\n/** @alpha */\nexport function isContentSourceMapBody(\n  body: unknown,\n): body is ContentSourceMapQueryResponse {\n  return typeof body === 'object' && body !== null && 'resultSourceMap' in body\n}\n","import { createClient as _createClient, SanityClient } from '@sanity/client'\n\nimport { createHttpRequest } from './request'\nimport type { PreviewKitClientConfig } from './types'\n\nexport type * from './types'\nexport type * from '@sanity/client'\n\n/**\n * @alpha\n */\nexport const createClient = (config: PreviewKitClientConfig): SanityClient => {\n  const {\n    encodeSourceMap = detectEnableSourceMap(),\n    encodeSourceMapAtPath,\n    studioUrl = detectStudioUrl(),\n    logger,\n    ...options\n  } = config\n\n  let shouldEncodeSourceMap = encodeSourceMap === true\n\n  // If encodeSourceMap is set to 'auto', then we need to check if we're running on Vercel and on a preview deployment\n  if (encodeSourceMap === 'auto') {\n    shouldEncodeSourceMap = isVercelPreviewEnvironment()\n  }\n\n  if (typeof encodeSourceMap === 'string' && encodeSourceMap !== 'auto') {\n    throw new Error(\n      `Invalid value for encodeSourceMap: ${encodeSourceMap}. Did you mean 'auto'?`,\n    )\n  }\n\n  try {\n    if (shouldEncodeSourceMap && config.resultSourceMap !== false) {\n      if (!studioUrl) {\n        logger?.error?.(\n          '[@sanity/preview-kit]: Content source map enabled client is enabled, but no studioUrl is provided. Falling back to @sanity/client',\n        )\n        return _createClient(options)\n      }\n\n      logger?.debug?.(\n        '[@sanity/preview-kit]: Creating source map enabled client',\n      )\n      const httpRequest = createHttpRequest({\n        encodeSourceMapAtPath,\n        studioUrl,\n        logger,\n      })\n      return new SanityClient(httpRequest, {\n        ...options,\n        // Source maps by Content Lake are required in order to know where to insert the encoded source maps into strings\n        resultSourceMap: true,\n      })\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\n      '[@sanity/preview-kit]: Error creating client',\n      err,\n      'falling back to non-embedded sourcemap mode',\n    )\n  }\n  return _createClient(options)\n}\n\nfunction isVercelPreviewEnvironment() {\n  try {\n    // @ts-expect-error -- VERCEL_ENV is not a declared import.meta.env variable\n    return import.meta.env.VERCEL_ENV === 'preview'\n  } catch {\n    // ignore\n  }\n  try {\n    // eslint-disable-next-line no-process-env\n    return process.env.VERCEL_ENV === 'preview'\n  } catch {\n    // ignore\n  }\n  return false\n}\n\nfunction detectEnableSourceMap(): PreviewKitClientConfig['encodeSourceMap'] {\n  try {\n    // @ts-expect-error -- SANITY_SOURCE_MAP is not a declared import.meta.env variable\n    return import.meta.env.SANITY_SOURCE_MAP === 'true' || 'auto'\n  } catch {\n    // ignore\n  }\n  try {\n    // eslint-disable-next-line no-process-env\n    return process.env.SANITY_SOURCE_MAP === 'true' || 'auto'\n  } catch {\n    // ignore\n  }\n  return 'auto'\n}\n\n// eslint-disable-next-line consistent-return\nfunction detectStudioUrl() {\n  try {\n    // @ts-expect-error -- SANITY_STUDIO_URL is not a declared import.meta.env variable\n    return import.meta.env.SANITY_STUDIO_URL\n  } catch {\n    // ignore\n  }\n  try {\n    // eslint-disable-next-line no-process-env\n    return process.env.SANITY_STUDIO_URL\n  } catch {\n    // ignore\n  }\n}\n","import { mapToEditLinks as CSMMapToEditLinks } from '../csm/mapToEditLinks'\nimport type { ContentSourceMapQueryResponse } from './types'\n\n/**\n * @deprecated Please use `mapToEditLinks` from `@sanity/preview-kit/csm` instead\n * @alpha\n */\nexport function mapToEditLinks(\n  response: ContentSourceMapQueryResponse,\n  studioUrl: string,\n): unknown {\n  return CSMMapToEditLinks(\n    response.result,\n    response.resultSourceMap!,\n    studioUrl,\n  )\n}\n"],"names":["transcodeResponse","_ref","studioUrl","encodeSourceMapAtPath","logger","transcoder","createTranscoder","onResponse","response","_a","_b","_c","_d","_e","_f","_g","isBodyResponse","Array","isArray","body","isPlainObject","isContentSourceMapBody","isResultBody","error","call","transcoderResult","result","resultSourceMap","isSkipping","report","skipped","length","isEncoding","encoded","groupCollapsed","log","concat","table","Set","path","add","replace","values","groupEnd","createHttpRequest","_ref2","superRequester","originalRequester","clone","use","httpRequest","options","requester","arguments","undefined","maxRedirects","defaultRequester","createClient","config","encodeSourceMap","detectEnableSourceMap","detectStudioUrl","shouldEncodeSourceMap","isVercelPreviewEnvironment","Error","_createClient","debug","SanityClient","err","console","VERCEL_ENV","process","env","SANITY_SOURCE_MAP","SANITY_STUDIO_URL","mapToEditLinks","CSMMapToEditLinks"],"mappings":"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"}